#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/blindfuzzy/LHF.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/lhf/blindfuzzy/LHF
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/lhf/blindfuzzy/LHF/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/lhf/blindfuzzy
EXECUTEABLE1=LHF.py
EXECUTEABLE2=lhf
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/0.Initial/usrlcl/.local/share/applications/2.Vulnerability-Scanner
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner
DSKTPFL=lhf.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 _     _   _ _____ 
| |   | | | |  ___|
| |   | |_| | |_   
| |___|  _  |  _|  
|_____|_| |_|_|    
           
UPDATE   
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then

cd $GITREPOROOT
GITRESET
GITSBMDLINIT

#echo "#!/bin/bash 
#python $GITREPOROOT/$EXECUTEABLE1" > $GITREPOROOT/$EXECUTEABLE2
chmod +x $GITREPOROOT/$EXECUTEABLE1
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi
