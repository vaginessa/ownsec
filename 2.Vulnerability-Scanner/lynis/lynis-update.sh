#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/CISOfy/lynis.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/lynis/CISOfy/lynis
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/lynis/CISOfy/lynis/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/lynis/CISOfy
EXECUTEABLE1=lynis.sh
EXECUTEABLE2=lynis
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/0.Initial/usrlcl/.local/share/applications/2.Vulnerability-Scanner
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner
DSKTPFL=lynis.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 _  __   ___   _ ___ ____  
| | \ \ / / \ | |_ _/ ___| 
| |  \ V /|  \| || |\___ \ 
| |___| | | |\  || | ___) |
|_____|_| |_| \_|___|____/ 
               
UPDATE                                          
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT
GITRESET
GITSBMDLINIT

echo '#!/bin/bash

cd /opt/ITSEC/2.Vulnerability-Scanner/lynis/CISOfy/lynis

./lynis "$@"' > $EXECUTEABLE1
chmod +x $EXECUTEABLE1
chmod +x $EXECUTEABLE2
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi
