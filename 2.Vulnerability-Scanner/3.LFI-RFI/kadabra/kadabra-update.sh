#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/D35m0nd142/Kadabra.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/kadabra/D35m0nd142/Kadabra
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/kadabra/D35m0nd142/Kadabra/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/kadabra/D35m0nd142
EXECUTEABLE1=kadabra
EXECUTEABLE2=kadabra
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/0.Initial/usrlcl/.local/share/applications/2.Vulnerability-Scanner/3.LFI-RFI
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/3.LFI-RFI
DSKTPFL=kadabra.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 _  __    _    ____    _    ____  ____      _    
| |/ /   / \  |  _ \  / \  | __ )|  _ \    / \   
| ' /   / _ \ | | | |/ _ \ |  _ \| |_) |  / _ \  
| . \  / ___ \| |_| / ___ \| |_) |  _ <  / ___ \ 
|_|\_\/_/   \_\____/_/   \_\____/|_| \_\/_/   \_\
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then

cd $GITREPOROOT

GITRESET

GITSBMDLINIT

chmod +x make.bash
./make.bash

cd $GITREPOROOT
sudo rm -f $BINDIR/$EXECUTEABLE2
chmod +x $GITREPOROOT/$EXECUTEABLE1
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi
