#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/deadbits/Intersect-2.5.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/intersect-2-5/deadbits/Intersect-2.5
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/intersect-2-5/deadbits
EXECUTEABLE1=intersect.sh
EXECUTEABLE2=intersect
EXECUTEABLE2=Create.py
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/0.Initial/usrlcl/.local/share/applications/3.Exploitation-Tools
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools
DSKTPFL=intersect.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}


echo "${bold}
 ___ _   _ _____ _____ ____  ____  _____ ____ _____ 
|_ _| \ | |_   _| ____|  _ \/ ___|| ____/ ___|_   _|
 | ||  \| | | | |  _| | |_) \___ \|  _|| |     | |  
 | || |\  | | | | |___|  _ < ___) | |__| |___  | |  
|___|_| \_| |_| |_____|_| \_\____/|_____\____| |_|  
                
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT
GITRESET
GITSBMDLINIT

echo '#!/bin/bash
cd /opt/ITSEC/3.Exploitation-Tools/intersect-2-5/deadbits/Intersect-2.5
python Create.py "$@"' > $EXECUTEABLE1
chmod +x $EXECUTEABLE1
chmod +x $EXECUTEABLE3
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi

