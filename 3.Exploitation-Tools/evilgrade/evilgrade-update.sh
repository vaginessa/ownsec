#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/infobyte/evilgrade.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/evilgrade/infobyte/evilgrade
GITCONFDIR=/opt/ITSEC/3.Exploitation-Tools/evilgrade/infobyte/evilgrade/.git
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/evilgrade/infobyte
EXECUTEABLE1=evilgrade.sh
EXECUTEABLE2=evilgrade
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/0.Initial/usrlcl/.local/share/applications/3.Exploitation-Tools
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools
DSKTPFL=evilgrade.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}
echo "${bold}
 _______     _____ _     ____ ____      _    ____  _____ 
| ____\ \   / /_ _| |   / ___|  _ \    / \  |  _ \| ____|
|  _|  \ \ / / | || |  | |  _| |_) |  / _ \ | | | |  _|  
| |___  \ V /  | || |__| |_| |  _ <  / ___ \| |_| | |___ 
|_____|  \_/  |___|_____\____|_| \_\/_/   \_\____/|_____|
           
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT
sudo ln -s $GITREPOROOT/isrcore /etc/perl/isrcore

GITRESET
GITSBMDLINIT

echo '#!/bin/bash

cd /opt/ITSEC/3.Exploitation-Tools/evilgrade/infobyte/evilgrade
./evilgrade "$@"' > $EXECUTEABLE1
sudo chmod +x $EXECUTEABLE1
sudo chmod +x $EXECUTEABLE2
rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE1
rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL


echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi


