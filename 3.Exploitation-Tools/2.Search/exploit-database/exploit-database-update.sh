#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/offensive-security/exploit-database.git
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/2.Search/exploit-database/offensive-security/exploit-database
GITCONFDIR=/opt/ITSEC/3.Exploitation-Tools/2.Search/exploit-database/offensive-security/exploit-database/.git
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/2.Search/exploit-database/offensive-security
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}
echo "${bold}
 _______  ______  _     ___ ___ _____     ____  ____  
| ____\ \/ /  _ \| |   / _ \_ _|_   _|   |  _ \| __ ) 
|  _|  \  /| |_) | |  | | | | |  | |_____| | | |  _ \ 
| |___ /  \|  __/| |__| |_| | |  | |_____| |_| | |_) |
|_____/_/\_\_|   |_____\___/___| |_|     |____/|____/ 
                 
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT

GITRESET
GITSBMDLINIT

sed -i 's#/opt/exploit-database#/opt/ITSEC/3.Exploitation-Tools/2.Search/exploit-database/offensive-security/exploit-database#g' searchsploit

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi