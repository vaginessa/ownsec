#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/rezasp/vbscan.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/vbscan/rezasp/vbscan
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/vbscan/rezasp/vbscan/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/vbscan/rezasp
EXECUTEABLE1=vbscan.sh
EXECUTEABLE2=vbscan
EXECUTEABLE3=vbscan
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/vbscan
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/vbscan
DSKTPFL=vbscan.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/vbscan
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
__     ______ ____   ____    _    _   _ 
\ \   / / __ ) ___| / ___|  / \  | \ | |
 \ \ / /|  _ \___ \| |     / _ \ |  \| |
  \ V / | |_) |__) | |___ / ___ \| |\  |
   \_/  |____/____/ \____/_/   \_\_| \_|
           
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then

cd $GITREPOROOT
GITRESET
GITSBMDLINIT

echo '#!/bin/bash 

cd /opt/ITSEC/2.Vulnerability-Scanner/vbscan/rezasp/vbscan
perl vbscan.pl "$@"' > $EXECUTEABLE1

sudo chmod +x $EXECUTEABLE3
sudo chmod +x $EXECUTEABLE1
rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2

rm -f  $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi