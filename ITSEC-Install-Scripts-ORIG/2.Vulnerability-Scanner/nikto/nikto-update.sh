#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/sullo/nikto.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/nikto/sullo/nikto
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/nikto/sullo/nikto/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/nikto/sullo
EXECUTEABLE1=nikto.sh
EXECUTEABLE2=nikto
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/nikto
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/nikto
DSKTPFL=nikto.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/nikto
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}


echo "${bold}
 _   _ ___ _  _______ ___  
| \ | |_ _| |/ /_   _/ _ \ 
|  \| || || ' /  | || | | |
| |\  || || . \  | || |_| |
|_| \_|___|_|\_\ |_| \___/ 
               
UPDATE                                      
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT

GITRESET
GITSBMDLINIT

cd /opt/ITSEC/2.Vulnerability-Scanner/nikto/sullo/nikto/program/
echo '#!/bin/bash 
cd /opt/ITSEC/2.Vulnerability-Scanner/nikto/sullo/nikto/program
perl nikto.pl "$@"' > nikto.sh

chmod +x $GITREPOROOT/program/$EXECUTEABLE1
sudo rm -f $BINDIR/$EXECUTEABLE2
#sudo rm -f /etc/nikto.conf
sudo cp $GITREPOROOT/program/nikto.conf /etc/nikto.conf
sudo ln -s $GITREPOROOT/program/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2

mkdir -p $DSKTPFLSDEST
rm -f $DSKTPFLSDEST/$DSKTPFL
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi

