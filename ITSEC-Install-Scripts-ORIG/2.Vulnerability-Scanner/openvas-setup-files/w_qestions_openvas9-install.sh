#!/bin/bash

###WORKS
###TO-DO: 
#Add menu entry link and startstop
############################# PREQUISITES START #############################
# 1. It is expected that the Openvas9 target INSTALLDIR PATH is already in place. 
#    This Script will fail if the targt folder is not in place
#
# 2. Tried my very best to avoid adding unessary apt repositories to teh dependencies to be installed, however, 
#    due to the amount of trail and error im just done with it now.
#
# ~. Why so complicated if ther eare apt repositories? ... BECAUSE ....
#
############################# PREQUISITES END #############################

#######################################################################
############################# SETUP START #############################
#######################################################################

############################# VARIABLES START #############################
INSTALLDIR=/opt/ITSEC/2.Vulnerability-Analysis/1.Vulnerability-Scanner/openvas
setupfilesdir=/opt/ownsec/2.Vulnerability-Analysis/1.Vulnerability-Scanner/openvas-setup-files
menuconsolescripts=/opt/ownsec/2.Vulnerability-Analysis/1.Vulnerability-Scanner/openvas-setup-files/menu_console-scripts
#########SYMLINK
startall=openvas-start_all.sh
stopall=openvas-kill_all.sh
checksetup=openvas9-checksetup.sh
updateall=openvas-update-all.sh
###
startallsymlink=openvas-start_all
stopallsymlink=openvas-kill_all
checksetupsymlink=openvas9-checksetup
updateallsymlink=openvas-update-all

#########SYMLINK END

#Location of the new openvassd.conf
openvassdconf=/opt/ownsec/2.Vulnerability-Analysis/1.Vulnerability-Scanner/openvas-setup-files/conf-files/openvassd.conf
#Location of menu files
menufilesdir=/opt/ownsec/2.Vulnerability-Analysis/1.Vulnerability-Scanner/openvas-setup-files/menu_console-scripts/desktop-files

#Install 
LIBRARIES=openvas-libraries-9.0.1
LIBRARIESURL=http://wald.intevation.org/frs/download.php/2420/openvas-libraries-9.0.1.tar.gz
SCANNER=openvas-scanner-5.1.1
SCANNERURL=http://wald.intevation.org/frs/download.php/2423/openvas-scanner-5.1.1.tar.gz
MANAGER=openvas-manager-7.0.1
MANAGERURL=http://wald.intevation.org/frs/download.php/2426/openvas-manager-7.0.1.tar.gz
GSAD=greenbone-security-assistant-7.0.2
GSADURL=http://wald.intevation.org/frs/download.php/2429/greenbone-security-assistant-7.0.2.tar.gz
CLI=openvas-cli-1.4.5
CLIURL=http://wald.intevation.org/frs/download.php/2397/openvas-cli-1.4.5.tar.gz

SMB=openvas-smb-1.0.2
SMBURL=http://wald.intevation.org/frs/download.php/2377/openvas-smb-1.0.2.tar.gz

OSPD=ospd-1.2.0
OSPDURL=http://wald.intevation.org/frs/download.php/2401/ospd-1.2.0.tar.gz

DEBSECAN=ospd-debsecan-1.2b1
DEBSECANURL=http://wald.intevation.org/frs/download.php/2405/ospd-debsecan-1.2b1.tar.gz

NMAP=ospd-nmap-1.0b1
NMAPURL=http://wald.intevation.org/frs/download.php/2218/ospd-nmap-1.0b1.tar.gz
############################# VARIABLE END #############################
#
############################# STATIC FUNCTIONS START #############################
#1i
. /opt/ownsec/ITSEC-Install-Scripts-ORIG/001.functions/all-scripts.sh
############################# STATIC FUNCTIONS END #############################
#
############################# MAIN SETUP START #############################
echo "${bold}
  ___  ____  _____ _   ___     ___    ____  ___    ____    _    ____  _   _ 
 / _ \|  _ \| ____| \ | \ \   / / \  / ___|/ _ \  | __ )  / \  / ___|| | | |
| | | | |_) |  _| |  \| |\ \ / / _ \ \___ \ (_) | |  _ \ / _ \ \___ \| |_| |
| |_| |  __/| |___| |\  | \ V / ___ \ ___) \__, | | |_) / ___ \ ___) |  _  |
 \___/|_|   |_____|_| \_|  \_/_/   \_\____/  /_/  |____/_/   \_\____/|_| |_|
 ${normal}"
echo ""
echo "SCRIPT IS BUILD ON 4.8.0-52-generic #54~ 16.04.2 LTS (Xenial Xerus)"
echo ""
echo "Set Installation Path is: ${bold}$INSTALLDIR ${normal} - change at line 3 in openvas9-setup.sh"
echo ""
echo "YOUR SYSTEM:"
sudo uname -r
sudo lsb_release -a
echo ""

#############################  STEP 1 - Install all the Openvas9 and Addon Dependencies via apt-get START #############################
read -r -p "STEP 1 - Install all the Openvas9 and Addon Dependencies via apt-get??? [y/N] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then
sudo apt-get update
sudo apt-get upgrade
sudo ldconfig
sudo updatedb

xargs -a <(awk '/^\s*[^#]/' "/opt/ownsec/0.Initial/lst/apt/deps-openvas.txt") -r -- sudo apt-get install
 sudo ldconfig
sudo updatedb

sudo rm -r $INSTALLDIR
mkdir $INSTALLDIR
cd $INSTALLDIR/

echo "STEP 1 - Install all the dependencies via apt - COMPLETE"
else
  cd $INSTALLDIR/
fi

#############################  STEP 1 - STEP 1 - Install all the Openvas9 and Addon Dependencies via apt-get END #############################
#
#############################  STEP 2 - Load, Build and Install START #############################
read -r -p "STEP 2 - Load, Build and Install Openvas 9 to $INSTALLDIR? [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then
#Download, unpck, build install each ...

	wget $LIBRARIESURL
	tar xvfz $LIBRARIES.tar.gz
	cd $LIBRARIES
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..

sudo ldconfig
sudo updatedb
	wget $SCANNERURL
	tar xvfz $SCANNER.tar.gz
	cd $SCANNER
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..

sudo ldconfig
sudo updatedb
	wget $MANAGERURL
	tar xvfz $MANAGER.tar.gz
	cd $MANAGER
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..

sudo ldconfig
sudo updatedb
	wget $GSADURL
	tar xvfz $GSAD.tar.gz
	cd $GSAD
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..

sudo ldconfig
sudo updatedb
	wget $CLIURL
	tar xvfz $CLI.tar.gz
	cd $CLI
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..

sudo ldconfig
sudo updatedb
	wget $SMBURL
	tar xvfz $SMB.tar.gz
	cd $SMB
	# PATCH-HACK SOURCE http://lists.wald.intevation.org/pipermail/openvas-devel/2016-May/003712.html
	# PATCH-HACK Remove the line containing the string "gnutls_certificate_type_set_priority," by using:
	sed -i /gnutls_certificate_type_set_priority/d $INSTALLDIR/openvas-smb-1.0.2/samba/lib/tls/tls.c
	mkdir build
	cd build
	cmake ..
	make -j 2
	sudo make install
	cd ../..


	wget $OSPDURL
	tar xvfz $OSPD.tar.gz
	cd $OSPD
	sudo python setup.py install
	cd ..

sudo ldconfig
sudo updatedb

	wget $DEBSECANURL
	tar xvfz $DEBSECAN.tar.gz
	cd $DEBSECAN
	sudo python setup.py install
	cd ..

sudo ldconfig
sudo updatedb
	wget $NMAPURL
	tar xvfz $NMAP.tar.gz
	cd $NMAP
	sudo python setup.py install
	cd ..
sudo ldconfig
sudo updatedb
echo "STEP 2 - Load, Build and Install - COMPLETE"
else
cd $INSTALLDIR
fi
############################# STEP 2 - STEP 2 - Load, Build and Install END #############################
#
############################# STEP 3 - SERVICE SETUP AND UPDATE START #############################
read -r -p "STEP 3 - SERVICE SETUP AND UPDATE [Y/n] 
BE CAREFUL, THIS ALTERS YOUR /etc/redis/redis.conf" response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then

sudo service apache2 stop
sudo service apache2 start
sudo service php7.0-fpm stop
sudo service php7.0-fpm start
sudo service redis-server stop
sudo service redis-server start

#Sync
sudo greenbone-scapdata-sync
sudo greenbone-certdata-sync
sudo greenbone-nvt-sync 


#Create certificates
sudo openvas-manage-certs -a


#Delete old user, create new user and put pass in textfile
sudo openvasmd --delete-user=admin
sudo openvasmd --create-user=admin --role=Admin > $INSTALLDIR/admin.txt





#Restart
#Stop all related Services.
sudo $menuconsolescripts/$stopall
sudo $menuconsolescripts/$startall


sudo openvasmd --update --progress

sudo openvasmd --rebuild --progress

#Download latest openvast-check-setup.
cd $menuconsolescripts
wget --no-check-certificate https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup
sudo chmod +x openvas-check-setup
cd $setupfilesdir


#Copy install repo openvassd.conf with socks settings to openvas installation.
sudo cp $openvassdconf /usr/local/etc/openvas/openvassd.conf 


#Fix redis.conf socket settings for openvas
#1.delete old entries
sudo sed -i.old '/^[#*-]\{0,1\}unixsocket/d' /etc/redis/redis.conf
#2.paste new settings
sudo echo '
unixsocket /var/run/redis/redis.sock
unixsocketperm 700' | sudo tee --append /etc/redis/redis.conf



#Symlink for console and menu start stop
#start all 
sudo ln -s $menuconsolescripts/$startall /usr/local/bin/$startallsymlink
#stop all 
sudo ln -s $menuconsolescripts/$stopall /usr/local/bin/$stopallsymlink
#check setup
sudo ln -s $menuconsolescripts/$checksetup /usr/local/bin/$checksetupsymlink

#check setup
sudo ln -s $menuconsolescripts/$updateall /usr/local/bin/$updateallsymlink


#Copy .desktop menu files
cp $menufilesdir/* /home/$USER/.local/share/applications/2.Vulnerability-Analysis/1.Vulnerability-Scanner/


#Check Installation
sudo $menuconsolescripts/$checksetup
sudo ps aux | egrep "(openvas.d|gsad)"


#Installation User Info console output
echo "${bold}OPENVAS 9 ADMIN DASHBOARD https://127.0.0.1:9392${normal}"
echo "${bold}admin password at $INSTALLDIR/admin.txt ${normal}"
echo "STEP 3 - Service Setup and Update - COMPLETE ..."
echo "${bold}Installer Complete ... if it doesent work, read the console print :) ${normal}"
echo "${bold}If checksetup complains about permissions, do sudo ${normal}"
echo "${bold}If setup failed may rerun sudo "openvasmd --rebuild --progress" and the update ...${normal}"
echo "${bold} may also restart apache2, redis-server and php${normal}"
echo "made this script to save time - if it served you, share, improve, share again... opensource is awesome"

else
cd $INSTALLDIR
echo "STEP 3 - Service Setup and Update - ABORTED ..."
echo "Install Script Finished"
fi
############################# STEP 3 - SERVICE SETUP AND UPDATE END #############################
#
############################# MAIN SETUP END #############################
#
############################# SETUP END #############################
