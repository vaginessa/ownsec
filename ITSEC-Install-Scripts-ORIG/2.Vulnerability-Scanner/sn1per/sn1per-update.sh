#!/bin/bash	

bold=$(tput bold)
normal=$(tput sgr0)
OKBLUE='\033[94m'
OKRED='\033[91m'
OKGREEN='\033[92m'
OKORANGE='\033[93m'
RESET='\e[0m'

GITREPO=https://github.com/1N3/sn1per.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/sn1per
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/sn1per
DSKTPFL=sn1per.desktop
LOOT_DIR=/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per/loot
PLUGINS_DIR=/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per/plugins
GITRESET () {

	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/sn1per
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}


echo "${bold}$OKRED 
 ____  _   _ ___ ____  _____ ____  
/ ___|| \ | |_ _|  _ \| ____|  _ \ 
\___ \|  \| || || |_) |  _| | |_) |
 ___) | |\  || ||  __/| |___|  _ < 
|____/|_| \_|___|_|   |_____|_| \_\
          
INSTALL
$RESET${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] 
then
    
cd $GITREPOROOT
sudo -H pip install dnspython colorama tldextract urllib3 ipaddress 
sudo updatedb
sudo ldconfig

sudo gem install ruby-nmap net-http-persistent mechanize text-table
GITRESET
GITSBMDLINIT

sed -i 's#/usr/share/sniper#/opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per#g' sniper
sed -i 's#/usr/share/brutex#/opt/ITSEC/4.Password/1.Network/brutex/1N3/BruteX#g' sniper

mkdir -p $LOOT_DIR/domains
mkdir -p $LOOT_DIR/screenshots
mkdir p $LOOT_DIR/nmap
mkdir p $LOOT_DIR/reports
mkdir -p $LOOT_DIR/output
cd $GITREPOROOT

echo -e "$OKORANGE + -- --=[Cleaning up old extensions...$RESET"
rm -Rf Goohak/ XSSTracer/ MassBleed/ SuperMicro-Password-Scanner/ CMSmap/ yasuo/ Sublist3r/ shocker/ jexboss/ serializekiller/ testssl.sh/ SimpleEmailSpoofer/ ssh-audit/ plugins/ 
mkdir $PLUGINS_DIR
cd $PLUGINS_DIR
mkdir -p $PLUGINS_DIR/nmap_scripts

echo -e "$OKORANGE + -- --=[Downloading extensions...$RESET"
#git clone https://github.com/1N3/Findsploit.git 
#git clone https://github.com/1N3/BruteX.git 
git clone https://github.com/1N3/Goohak.git 
git clone https://github.com/1N3/XSSTracer.git 
git clone https://github.com/1N3/MassBleed.git 
git clone https://github.com/1N3/SuperMicro-Password-Scanner 
git clone https://github.com/Dionach/CMSmap.git 
git clone https://github.com/0xsauby/yasuo.git 
git clone https://github.com/johndekroon/serializekiller.git 
git clone https://github.com/aboul3la/Sublist3r.git 
git clone https://github.com/nccgroup/shocker.git 
git clone https://github.com/drwetter/testssl.sh.git 
git clone https://github.com/lunarca/SimpleEmailSpoofer 
git clone https://github.com/arthepsy/ssh-audit 
wget https://svn.nmap.org/nmap/scripts/http-vuln-cve2017-5638.nse -O /usr/share/nmap/scripts/http-vuln-cve2017-5638.nse
cp $PWD/bin/iis-buffer-overflow.nse /usr/share/nmap/scripts/iis-buffer-overflow.nse
echo -e "$OKORANGE + -- --=[Setting up environment...$RESET"
cd /opt/ownsec/3.Exploitation-Tools/2.Search/findsploit
./findsploit.sh
# make install setup brutex
cd /opt/ownsec/4.Password/1.Network/brutex
./brutex.sh

cd $GITREPOROOT 
mkdir $LOOT_DIR 
mkdir $LOOT_DIR/screenshots/ -p 
mkdir $LOOT_DIR/nmap -p 
mkdir $LOOT_DIR/domains -p 
mkdir $LOOT_DIR/output -p 
mkdir $LOOT_DIR/reports -p 
sudo cp -f $GITREPOROOT/bin/clamav-exec.nse /usr/share/nmap/scripts/ 
chmod +x $GITREPOROOT/sniper
chmod +x $GITREPOROOT/bin/dnsdict6
chmod +x $PLUGINS_DIR/Goohak/goohak
chmod +x $PLUGINS_DIR/XSSTracer/xsstracer.py
chmod +x $PLUGINS_DIR/MassBleed/massbleed
chmod +x $PLUGINS_DIR/MassBleed/heartbleed.py
chmod +x $PLUGINS_DIR/MassBleed/openssl_ccs.pl
chmod +x $PLUGINS_DIR/MassBleed/winshock.sh 
chmod +x $PLUGINS_DIR/SuperMicro-Password-Scanner/supermicro_scan.sh
chmod +x $PLUGINS_DIR/testssl.sh/testssl.sh
sudo rm -f /usr/local/bin/sniper
sudo rm -f /usr/local/bin/goohak
sudo rm -f /usr/local/bin/xsstracer
sudo rm -f /usr/local/bin/findsploit
sudo rm -f /usr/local/bin/copysploit
sudo rm -f /usr/local/bin/compilesploit
sudo rm -f /usr/local/bin/massbleed
sudo rm -f /usr/local/bin/testssl
sudo ln -s $GITREPOROOT/sniper /usr/local/bin/sniper
sudo ln -s $PLUGINS_DIR/Goohak/goohak /usr/local/bin/goohak
sudo ln -s $PLUGINS_DIR/XSSTracer/xsstracer.py /usr/local/bin/xsstracer
sudo ln -s $PLUGINS_DIR/MassBleed/massbleed /usr/local/bin/massbleed
sudo ln -s $PLUGINS_DIR/testssl.sh/testssl.sh /usr/local/bin/testssl
echo -e "$OKORANGE + -- --=[Done!$RESET"
echo -e "$OKORANGE + -- --=[To run, type 'sniper'! $RESET"
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL
chmod +x /opt/ITSEC/2.Vulnerability-Scanner/sn1per/1N3/sn1per/sniper

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi
