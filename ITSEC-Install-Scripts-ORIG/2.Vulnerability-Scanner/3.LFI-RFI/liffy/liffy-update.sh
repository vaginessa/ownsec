#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/hvqzao/liffy
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/liffy/hvqzao/liffy
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/liffy/hvqzao/liffy/.git
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/liffy/hvqzao
EXECUTEABLE1=liffy.sh
EXECUTEABLE2=liffy
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/3.LFI-RFI/liffy
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/3.LFI-RFI/liffy
DSKTPFL=liffy.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/3.LFI-RFI/liffy
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 _     ___ _____ _______   __
| |   |_ _|  ___|  ___\ \ / /
| |    | || |_  | |_   \ V / 
| |___ | ||  _| |  _|   | |  
|_____|___|_|   |_|     |_|  
       
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT

GITRESET

GITSBMDLINIT

echo '#!/bin/bash

cd /opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/liffy/hvqzao/liffy

python liffy.py "$@"' > $EXECUTEABLE1

chmod +x $EXECUTEABLE1
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2

rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi