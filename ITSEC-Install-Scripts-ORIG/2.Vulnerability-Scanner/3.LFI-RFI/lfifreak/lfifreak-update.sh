#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/OsandaMalith/lfifreak.git
BRANCH=master
GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak/OsandaMalith/lfifreak
GITCONFDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak/OsandaMalith/lfifreak/.git
BINDIRLCL=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak/OsandaMalith/lfifreak/Binaries/Linux
GITCLONEDIR=/opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak/OsandaMalith
EXECUTEABLE1=lfi.py
EXECUTEABLE2=lfifreak
EXECUTEABLE3=lfifreak.sh
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak
DSKTPFL=lfifreak.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 _     _____ ___ _____ ____  _____    _    _  __
| |   |  ___|_ _|  ___|  _ \| ____|  / \  | |/ /
| |   | |_   | || |_  | |_) |  _|   / _ \ | ' / 
| |___|  _|  | ||  _| |  _ <| |___ / ___ \| . \ 
|_____|_|   |___|_|   |_| \_\_____/_/   \_\_|\_\
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT

GITRESET

GITSBMDLINIT

#cd $BINDIRLCL
echo '#!/bin/bash

cd /opt/ITSEC/2.Vulnerability-Scanner/3.LFI-RFI/lfifreak/OsandaMalith/lfifreak

sudo python lfi.py "$@"' > $EXECUTEABLE3
chmod +x $GITREPOROOT/$EXECUTEABLE1
chmod +x $GITREPOROOT/$EXECUTEABLE3
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE3 $BINDIR/$EXECUTEABLE2
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi