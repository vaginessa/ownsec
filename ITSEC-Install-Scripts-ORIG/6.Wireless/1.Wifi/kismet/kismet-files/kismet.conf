# Kismet config file
# Most of the "static" configs have been moved to here -- the command line
# config was getting way too crowded and cryptic.  We want functionality,
# not continually reading --help!

# Version of Kismet config
version=2017

# Include optional site-local config options.  If this config file is not
# present, it will be ignored.
opt_include=%E/kismet_site.conf

# Include the httpd config options
# %E is expanded to the system etc path configured at install
include=%E/kismet_httpd.conf

# Where capture binaries are allowed to live; for security reasons capture
# binaries are only executed from these directories
capture_binary_path=%B/kismet_capture_tools/

# Kismet can accept connections from remote capture datasources; by default this 
# is enabled on the loopback interface *only*.  It's recommended that the remote
# capture socket stay bound to the loopback local interface, and additional
# authentication - such as SSH tunnels - is used.  Check the Kismet README for
# more information about setting up remote capture securely!
remote_capture_listen=127.0.0.1
remote_capture_port=3501

# Prefix of where we log (as used in the logtemplate later)
# logprefix=/some/path/to/logs


# See the README for more information how to define sources; sources take the
# form of:
# source=interface:options
#
# For example to capture from a Wi-Fi interface in Linux you could specify:
source=wlan0
source=wlan1
source=wlan2
#
# or to specify a custom name,
# source=wlan0:name=ath9k
#
# Sources may be defined in the config file or on the command line via the 
# '-c' option.  Sources may also be defined live via the WebUI.


# Default behavior of capture sources; if there are no options passed on the source
# definition to control hopping, hop rate, or other attributes, these are applied

# Hop channels if possible
channel_hop=true

# How fast do we hop channels?  Time can be hops/second or hops/minute.
channel_hop_speed=5/sec

# If we have multiple sources with the same type, Kismet can try to split
# them up so that they hop from different starting positions; this maximizes the
# coverage
split_source_hopping=true

# Should Kismet scramble the channel list so that it hops in a semi-random pattern?
# This helps sources like Wi-Fi where many channels are adjacent and can overlap, 
# by randomizing 2.4ghz channels Kismet can take advantage of the overlap.  Typically
# leave this turned on.
randomized_hopping=true

# Should sources be re-opened when they encounter an error?
retry_on_source_error=true


# New GPS configuration
# gps=type:options
#
# gps=serial:device=/dev/ttyACM0,name=laptop
# gps=gpsd:host=localhost,port=2947
# gps=virtual:lat=123.45,lon=45.678,alt=1234

# Do we process the contents of data frames?  If this is enabled, data
# frames will be truncated to the headers only immediately after frame type
# detection.  This will disable IP detection, etc, however it is likely
# safer (and definitely more polite) if monitoring networks you do not own.
# hidedata=true

# Do we allow plugins to be used?  This will load plugins from the system
# and user plugin directiories when set to true (See the README for the default
# plugin locations).
allowplugins=true

# For long-running instances of Kismet in a WIDS style usage, it may be 
# useful to limit the amount of memory kismet will consume, with the
# following tuning values:

# Time, in seconds, for devices to be tracked when idle.  By default, devices
# are kept forever, however in RAM constrained environments it may be preferable
# to stop tracking older devices.
# Devices which are removed will be detected as new devices without historical
# data if they are detected a second time.
# Example timeout of 2 hours (60*60*2)
#
# tracker_device_timeout=7200

# Maximum number of devices allowed in the tracker.  If this is reached, older
# devices will be purged, and if they are detected again, will show up as new 
# devices without historical data.
#
# tracker_max_devices=10000

# OUI file, expected format 00:11:22<tab>manufname
# IEEE OUI file used to look up manufacturer info.  We default to the
# wireshark one since most people have that.
ouifile=/etc/manuf
ouifile=/usr/share/wireshark/wireshark/manuf
ouifile=/usr/share/wireshark/manuf
ouifile=/Applications/Wireshark.app/Contents/Resources/share/wireshark/manuf



# Packet filtering options:
# filter_tracker - Packets filtered from the tracker are not processed or
#                  recorded in any way.
# filter_export  - Controls what packets influence the exported CSV, network,
#                  xml, gps, etc files.
# All filtering options take arguments containing the type of address and
# addresses to be filtered.  Valid address types are 'ANY', 'BSSID',
# 'SOURCE', and 'DEST'.  Filtering can be inverted by the use of '!' before
# the address.  For example,
# filter_tracker=ANY(!"00:00:DE:AD:BE:EF")
# has the same effect as the previous mac_filter config file option.
# filter_tracker=...
# filter_dump=...
# filter_export=...
# filter_netclient=...

# Alerts to be reported and the throttling rates.
# alert=name,throttle/unit,burst
# The throttle/unit describes the number of alerts of this type that are
# sent per time unit.  Valid time units are second, minute, hour, and day.
# Burst describes the number of alerts sent before throttling takes place.
# For example:
# alert=FOO,10/min,5
# Would allow 5 alerts through before throttling is enabled, and will then
# limit the number of alerts to 10 per minute.
# A throttle rate of 0 disables throttling of the alert.
# See the README for a list of alert types.
alert=ADHOCCONFLICT,5/min,1/sec
alert=AIRJACKSSID,5/min,1/sec
alert=APSPOOF,10/min,1/sec
alert=BCASTDISCON,5/min,2/sec
alert=BSSTIMESTAMP,5/min,1/sec
alert=CHANCHANGE,5/min,1/sec
alert=CRYPTODROP,5/min,1/sec
alert=DISASSOCTRAFFIC,10/min,1/sec
alert=DEAUTHFLOOD,5/min,2/sec
alert=DEAUTHCODEINVALID,5/min,1/sec
alert=DISCONCODEINVALID,5/min,1/sec
alert=DHCPNAMECHANGE,5/min,1/sec
alert=DHCPOSCHANGE,5/min,1/sec
alert=DHCPCLIENTID,5/min,1/sec
alert=DHCPCONFLICT,10/min,1/sec
alert=NETSTUMBLER,5/min,1/sec
alert=LUCENTTEST,5/min,1/sec
alert=LONGSSID,5/min,1/sec
alert=MSFBCOMSSID,5/min,1/sec
alert=MSFDLINKRATE,5/min,1/sec
alert=MSFNETGEARBEACON,5/min,1/sec
alert=NULLPROBERESP,5/min,1/sec
alert=DOT11D,5/min,1/sec
alert=BEACONRATE,5/min,1/sec
alert=ADVCRYPTCHANGE,5/min,1/sec
alert=MALFORMMGMT,5/min,1/sec
alert=WPSBRUTE,5/min,1/sec

# Controls behavior of the APSPOOF alert.  SSID may be a literal match (ssid=) or
# a regex (ssidregex=) if PCRE was available when kismet was built.  The allowed 
# MAC list must be comma-separated and enclosed in quotes if there are multiple 
# MAC addresses allowed.  MAC address masks are allowed.
apspoof=Foo1:ssidregex="(?i:foobar)",validmacs=00:11:22:33:44:55
apspoof=Foo2:ssid="Foobar",validmacs="00:11:22:33:44:55,aa:bb:cc:dd:ee:ff"

# Known WEP keys to decrypt, bssid,hexkey.  This is only for networks where
# the keys are already known, and it may impact throughput on slower hardware.
# Multiple wepkey lines may be used for multiple BSSIDs.
# wepkey=00:DE:AD:C0:DE:00,FEEDFACEDEADBEEF01020304050607080900

# Is transmission of the keys to the client allowed?  This may be a security
# risk for some.  If you disable this, you will not be able to query keys from
# a client.
allowkeytransmit=true

# How often (in seconds) do we write all our data files (0 to disable)
writeinterval=300

# How many alerts do we backlog for new clients?  Only change this if you have
# a -very- low memory system and need those extra bytes, or if you have a high
# memory system and a huge number of alert conditions.
alertbacklog=50

# Comma-separated list of logs to enable, either by name or class
logtypes=pcap,xml,gps,text,alert

# Format of the pcap dump (PPI or 80211)
pcapdumpformat=ppi
# pcapdumpformat=80211

# Default log title
logdefault=Kismet

# logtemplate - Filename logging template.
# This is, at first glance, really nasty and ugly, but you'll hardly ever
# have to touch it so don't complain too much.
#
# %p is replaced by the logging prefix + '/'
# %n is replaced by the logging title (-t cmdline)
# %d is replaced by the starting date as Mmm-DD-YYYY
# %D is replaced by the current date as YYYYMMDD
# %t is replaced by the starting time as HH-MM-SS
# %T is replaced by the starting time as HHMMSS
# %i is replaced by the increment log in the case of multiple logs
# %I is replaced by the increment log, padded with zeroes
# %l is replaced by the log type (pcapdump, strings, etc)
# %h is replaced by the home directory

logtemplate=%p%n-%D-%t-%i.%l

# Where state info, etc, is stored.  You shouldnt ever need to change this.
# This is a directory.
configdir=%h/.kismet/

