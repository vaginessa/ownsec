#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/reverse-shell/routersploit
BRANCH=master
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit
GITCONFDIR=/opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit/.git
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell
EXECUTEABLE1=routersploit.sh
EXECUTEABLE2=routersploit
EXECUTEABLE3=rsf.py
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ownsec/ITSEC-Install-Scripts-ORIG/3.Exploitation-Tools/routersploit
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools/routersploit
DSKTPFL=routersploit.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/$BRANCH
	git pull
}
APTLSTDIR=/opt/ownsec/ITSEC-Install-Scripts-ORIG/0.Initial/lst/apt
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
 ____   ___  _   _ _____ _____ ____  ____  ____  _     ___ ___ _____ 
|  _ \ / _ \| | | |_   _| ____|  _ \/ ___||  _ \| |   / _ \_ _|_   _|
| |_) | | | | | | | | | |  _| | |_) \___ \| |_) | |  | | | | |  | |  
|  _ <| |_| | |_| | | | | |___|  _ < ___) |  __/| |__| |_| | |  | |  
|_| \_\\___/ \___/  |_| |_____|_| \_\____/|_|   |_____\___/___| |_|  
             
UPDATE
${normal}"
if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone -b $BRANCH $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout $BRANCH &&
    git fetch origin $BRANCH &&
    [ `git rev-list HEAD...origin/$BRANCH --count` != 0 ] &&
    git merge origin/$BRANCH
then
    
cd $GITREPOROOT
GITRESET
GITSBMDLINIT

sudo -H pip2 install -r requirements.txt

sudo rm -f /usr/local/bin/routersploit

echo '#!/bin/bash
cd /opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit
python rsf.py "$@"' > $EXECUTEABLE1
chmod +x $GITREPOROOT/$EXECUTEABLE1
chmod +x $GITREPOROOT/$EXECUTEABLE3
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi